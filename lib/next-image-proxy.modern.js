import e from"isomorphic-unfetch";import t,{Stream as r}from"stream";import s from"lodash.merge";import n from"user-agents";function o(o){const i=s({whitelistedPatterns:[],fallbackUrl:"",messages:{wrongFormat:"Image url not provided or has wrong format",notWhitelisted:"Provided image url is not whitelisted",imageFetchError:"Couldn't fetch the image"}},o);return async function(s,o){const m=new URL(s.query.imageUrl);Object.keys(s.query).map(e=>m.searchParams.append(e,s.query[e]));const c=m.href;if(!c||c&&Array.isArray(c))return void o.status(400).send({message:i.messages.wrongFormat});const u=function(e,t){return t.some(t=>e.match(t))}(c,i.whitelistedPatterns);if(!u)return void o.status(422).send({message:i.messages.notWhitelisted});const g=await async function(t){return await e(t,{headers:{"user-agent":(new n).toString()}}).then(e=>e.body)}(c);g?function(e,s,n){const o=new r.PassThrough;t.pipeline(s,o,t=>{if(t)return console.log(t),void a(e,n)}),o.pipe(e)}(o,g,i):a(o,i)}}function a(e,t){t.fallbackUrl.trim()?e.redirect(t.fallbackUrl):e.status(422).send({message:t.messages.imageFetchError})}export{o as withImageProxy};
//# sourceMappingURL=next-image-proxy.modern.js.map
